create database test_db;

use test_db;

select * from netflix_raw;

select * from netflix_raw;

ALTER TABLE netflix_raw
MODIFY COLUMN show_id VARCHAR(7);

ALTER TABLE netflix_raw
MODIFY COLUMN title VARCHAR(200);

-- to check the datatype length
SELECT Text, CHARACTER_MAXIMUM_LENGTH
FROM test_db.COLUMNS
WHERE TABLE_NAME = 'netflix_raw'
  AND COLUMN_NAME = 'description';

select * from netflix_raw 
where show_id = 's5023';

-- remove duplicates

SELECT show_id, COUNT(*) as cnt
FROM netflix_raw
GROUP BY show_id
HAVING cnt > 1;

DELETE FROM netflix_raws
WHERE id NOT IN (
  SELECT MIN(id)
  FROM netflix_raws
  GROUP BY show_id
);


SELECT title, COUNT(*) as cnt
FROM netflix_raw
GROUP BY title
HAVING cnt > 1;


DROP TABLE netflix_raw;

CREATE TABLE netflix_raw (
  show_id VARCHAR(10) PRIMARY KEY,
  type VARCHAR(10),
  title VARCHAR(200),
  director VARCHAR(250),
  cast VARCHAR(1000),
  country VARCHAR(150),
  date_added VARCHAR(20),
  release_year INT,
  rating VARCHAR(10),
  duration VARCHAR(10),
  listed_in VARCHAR(100),
  description VARCHAR(500)
);

-- remove duplicates
SELECT show_id, COUNT(*) as cnt
FROM netflix_raw
GROUP BY show_id
HAVING cnt > 1;


SELECT title, COUNT(*) as cnt
FROM netflix_raw
GROUP BY title
HAVING cnt > 1;

-- new table for listed in, driector ,country ,cast

SELECT show_id , value as director
into netflix_directors
FROM netflix_raw
cross apply STRING_SPLIT(director, ',');

select * from netflix_directors;

SELECT show_id , value as county
into netflix_county
FROM netflix_raw
cross apply STRING_SPLIT(country, ',');

select * from netflix_country;

SELECT show_id , value as cast
into netflix_cast
FROM netflix_raw
cross apply STRING_SPLIT(cast, ',');

select * from netflix_cast;

SELECT show_id , value as genre
into netflix_genre
FROM netflix_raw
cross apply STRING_SPLIT(listed_in, ',');

select * from netflix_genre;

-- analyzing the null values on country

select show_id,country from netflix_raw where country is null

-- first check is there null in country for this julin director 
select * from netflix_raw where director = 'Julien Leclercq';

select director,country from netflix_country as nc
inner join netflix_directors as nd 
on nc.show_id = nd.show_id
group by director,country
order by director

insert into netflix_country
select show_id,m.country 
from netflix_raw
inner join(
select director,country from netflix_country as nc
inner join netflix_directors as nd 
on nc.show_id = nd.show_id
group by director,country
) m on nr.director = m.direcor 
 where nr.country is null

-- Lets work on duration col

select * from netflix_raw where duration is null


WITH cte AS (
    SELECT *,
           ROW_NUMBER() OVER (PARTITION BY title, type ORDER BY show_id) AS rn
    FROM netflix_raw
)
SELECT 
    show_id,
    type,
    title,
    CAST(date_added AS DATE) AS date_added,
    release_year,
    rating, case when duration is null then rating else duration end as duration,
    description
into netflix_stg    
FROM cte

select * from netflix_stg



-- netflix data analysis

/*1  for each director count the no of movies and tv shows created by them in separate columns 
for directors who have created tv shows and movies both */

select nd.director 
,COUNT(distinct case when n.type='Movie' then n.show_id end) as no_of_movies
,COUNT(distinct case when n.type='TV Show' then n.show_id end) as no_of_tvshow
from netflix n
inner join netflix_directors nd on n.show_id=nd.show_id
group by nd.director
having COUNT(distinct n.type)>1


-- 2 which country has highest number of comedy movies 
select  top 1 nc.country , COUNT(distinct ng.show_id ) as no_of_movies
from netflix_genre ng
inner join netflix_country nc on ng.show_id=nc.show_id
inner join netflix n on ng.show_id=nc.show_id
where ng.genre='Comedies' and n.type='Movie'
group by  nc.country
order by no_of_movies desc


-- 3 what is average duration of movies in each genre
select ng.genre , avg(cast(REPLACE(duration,' min','') AS int)) as avg_duration
from netflix n
inner join netflix_genre ng on n.show_id=ng.show_id
where type='Movie'
group by ng.genre

